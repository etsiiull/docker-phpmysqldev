#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys
import subprocess
import argparse

def esCorrectoDirectorioMontaje (directorio):
  # punto de montaje
  esCorrecto  = True
  msgError = ""

  # existe directorio
  if not (os.path.isdir(directorio)):
    msgError = "Directorio de montaje no existe"
    esCorrecto = False

  # ruta aboluta
  if not (os.path.isabs(directorio)):
    msgError += "El directorio debe ser una ruta absoluta"
    esCorrecto = False

  print msgError
  return esCorrecto

#
#
#
parser = argparse.ArgumentParser( description='Inicia y para contenedor docker con php y mysql. Ej. docker run -v  ' )
parser.add_argument("comando", choices=["pull","run", "stop"],help="Ejecuta docker o pararlo")
parser.add_argument("-v", "--volume", type=str, help="Directorio donde está código php")
parser.add_argument("-p", "--port", type=str, help="Puerto")
parser.add_argument("imagen",type=str)
args = parser.parse_args()

# Aquí procesamos lo que se tiene que hacer con cada argumento
if args.comando == "pull":
  print 'docker pull estiull/'+args.imagen

if args.comando == "run" and esCorrectoDirectorioMontaje (args.volume):
  print "Ejecutando contenedor"
  print 'docker run -ti --rm -p',args.port, '-v', args.volume, '--name docker-phpmysqldev etsiiull/'+args.imagen,'/bin/start.sh'
  #os.system('docker run -ti --rm -p 9123:80 -v args.volume --name docker-phpmysqldev etsiiull/docker-phpmysqldev /bin/start.sh')

if args.comando == "stop":
    print "Parando contenedor"
    print 'docker stop  docker-phpmysqldev'
    #os.system('docker stop  docker-phpmysqldev')
